@model X.PagedList.IPagedList<WebXuongMoc.Models.Category>
@using X.PagedList.Mvc.Core;

@{
    ViewData["Title"] = "Danh Sách Sản Phẩm";
    Layout = "~/Areas/Admins/Views/Shared/_LayoutAdmin.cshtml";
}
<div class="row">
    <form action="" method="get" class="from-inline">
        <div class="form-group">
             <label class="sr-only" for="keyword">Tìm theo tên loại</label>
             <input class="from-control" name="name" id="keyword" placeholder="Nhập tên cần tìm">
        </div>
        <button tybe="submit" class="btn btn-default mr-1"><i class="fas fa-search"></i></button>
        <a asp-action="Create" class="btn btn-primary"><i class=" far fa-plus"></i>Thêm mới</a>
   </form>


<table class="table table-bordered">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Title)
            </th>
            <th>
                    @* @Html.DisplayNameFor(model => model.FirstOrDefault().Icon) *@
                    Anh
            </th>
            @*     <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().MateTitle)
                </th> *@
            <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().MetaKeyword)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().MetaDescription)
            </th>
           @*  <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Slug)
            </th> *@
            <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Orders)
            </th>
            <th>
                  @*   @Html.DisplayNameFor(model => model.FirstOrDefault().Parentid) *@
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().CreatedDate)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().UpdatedDate)
            </th>
            @* <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().AdminCreated)
            </th> *@
            @* <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().AdminUpdated)
            </th> *@
            @* <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Notes)
            </th> *@
            <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Status)
            </th>
           @*  <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Isdelete)
            </th> *@
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
                    <td>
                        @* @Html.DisplayFor(modelItem => item.Icon) *@
                        <img src="@item.Icon" alt="@item.Title" style="width:100px; height:auto;" />
                    </td>
            @* <td>
                @Html.DisplayFor(modelItem => item.MateTitle)
            </td> *@
            <td>
                @Html.DisplayFor(modelItem => item.MetaKeyword)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MetaDescription)
            </td>
           @*  <td>
                @Html.DisplayFor(modelItem => item.Slug)
            </td> *@
            <td>
                @Html.DisplayFor(modelItem => item.Orders)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Parentid)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedDate)
            </td>
            @* <td>
                @Html.DisplayFor(modelItem => item.AdminCreated)
            </td> *@
           @*  <td>
                @Html.DisplayFor(modelItem => item.AdminUpdated)
            </td> *@
           @*  <td>
                @Html.DisplayFor(modelItem => item.Notes)
            </td> *@
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            @* <td>
                @Html.DisplayFor(modelItem => item.Isdelete)
            </td> *@
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning" title="Chỉnh sửa">
                            <i class="fas fa-edit"></i> Sửa
                        </a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info" title="Xem chi tiết">
                            <i class="fas fa-eye"></i> Xem
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger" title="Xóa"
                           onclick="return confirm('Bạn có chắc chắn muốn xóa không?');">
                            <i class="fas fa-trash"></i> Xóa
                        </a>
                    </td>

        </tr>
}
    </tbody>
</table>
<hr />

    </table>
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }), new X.PagedList.Web.Common.PagedListRenderOptions
{
    LiElementClasses = new string[] { "page-item" },
    PageClasses = new string[] { "page-link" }
})
</div>